{"version":3,"sources":["services/history.js","components/reusable/input/index.js","components/reusable/button/index.js","common/actions/auth.js","components/signin/signin.js","components/signup/signup.js","services/socket.js","components/chat/chat-list/index.js","components/reusable/multi-select/index.js","components/chat/chat-create/index.js","components/chat/chat/member.js","components/chat/chat/index.js","components/chat/index.js","App.js","common/reducers/auth.js","common/reducers/index.js","services/http.js","common/sagas/auth.js","common/sagas/index.js","store.js","serviceWorker.js","index.js"],"names":["history","createHistory","basename","withStyles","root","background","input","color","classes","value","onChange","label","type","TextField","className","InputProps","Btn","title","onClick","disabled","Button","variant","setAuthData","payload","user","token","loadUsers","id","setUsers","users","connect","signIn","data","useState","nick","setNick","password","setPassword","e","target","to","signUp","email","setEmail","isAllFieldsFilled","socket","socketIOClient","process","query","store","auth","search","handleChangeSearch","chats","handleSetChatsList","socketIO","useEffect","emit","userId","on","off","forEach","chat","window","cordova","plugins","notification","local","schedule","name","text","message","foreground","push","placeholder","map","item","i","key","MultiSelect","values","handleChange","FormControl","InputLabel","Select","labelId","multiple","renderValue","selected","join","MenuItem","Checkbox","checked","find","a","ListItemText","primary","setName","usersName","handleSetUsersName","event","creator","Member","handleSetMessage","members","handleMembersFromSocket","messages","handleMessagesFromSocket","isPopupOpen","handleTogglePopup","filteredUsers","handleSetFilteredUsers","chatId","location","path","split","length","getChatId","pathname","m","mem","msg","isBase64","mimeRequired","src","renderMessage","TextareaAutosize","aria-label","msgOptions","userOptions","navigator","camera","getPicture","image","error","console","log","destinationType","DestinationType","DATA_URL","ChatContainer","exact","component","ChatList","CreateChat","Chat","ChatApp","SignIn","SignUp","initialState","combineReducers","state","action","http","method","url","params","localStorage","getItem","config","toLowerCase","paramsSerializer","p","qs","stringify","arrayFormat","axios","authSaga","removeItem","call","setItem","put","takeEvery","sagas","rootSaga","all","composeEnhancers","composeWithDevTools","maxAge","latency","sagaMiddleware","createSagaMiddleware","persistConfig","storage","blacklist","persistedReducer","persistReducer","reducers","Boolean","hostname","match","createStore","applyMiddleware","run","persistor","persistStore","Storage","renderReactDom","ReactDOM","render","document","getElementById","addEventListener","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.5ff88454.chunk.js","sourcesContent":["import { createBrowserHistory as createHistory } from 'history';\r\n\r\nconst history = createHistory({\r\n  basename: '/',\r\n});\r\n\r\nexport default history;","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst styles = {\r\n  root: {\r\n    background: \"#27292D\",\r\n  },\r\n  input: {\r\n    color: \"#ECECEC\",\r\n  },\r\n};\r\n\r\nconst Input = ({\r\n  classes,\r\n  value,\r\n  onChange,\r\n  label,\r\n  type,\r\n}) => {\r\n  return (\r\n    <TextField\r\n      label={label}\r\n      value={value}\r\n      onChange={onChange}\r\n      className={classes.root}\r\n      InputProps={{\r\n        className: classes.input,\r\n      }}\r\n      className='s_input'\r\n      type={type}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(Input);\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst Btn = ({\r\n  title,\r\n  onClick,\r\n  disabled,\r\n}) => {\r\n  return (\r\n    <Button\r\n      variant=\"outlined\"\r\n      onClick={onClick}\r\n      className='s_button'\r\n      disabled={disabled}\r\n    >\r\n      {title}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default Btn;\r\n","export const SET_AUTH_DATA = '@auth/SET_AUTH_DATA';\r\nexport const SIGN_IN = '@auth/SIGN_IN';\r\nexport const SIGN_UP = '@auth/SIGN_UP';\r\n\r\nexport const LOAD_USERS = 'LOAD_USERS';\r\nexport const SET_USERS = 'SET_USERS';\r\n\r\nexport const setAuthData = ({ user, token }) => ({\r\n  type: SET_AUTH_DATA,\r\n  payload: {\r\n    user,\r\n    token\r\n  }\r\n});\r\n\r\nexport const signIn = (data) => ({\r\n  type: SIGN_IN,\r\n  payload: data\r\n});\r\n\r\nexport const signUp = (data) => ({\r\n  type: SIGN_UP,\r\n  payload: data,\r\n});\r\n\r\nexport const loadUsers = (id) => ({\r\n  type: LOAD_USERS,\r\n  payload: id,\r\n});\r\n\r\nexport const setUsers = (users) => ({\r\n  type: SET_USERS,\r\n  payload: users,\r\n});\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from \"react-router-dom\";\r\nimport Input from '../reusable/input';\r\nimport Button from '../reusable/button';\r\nimport { signIn } from '../../common/actions/auth';\r\nimport './signin.css';\r\n\r\nconst SignIn = ({ signIn }) => {\r\n  const [nick, setNick] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  return(\r\n    <div className='signin__container'>\r\n      <Input\r\n        label='Nickname'\r\n        value={nick}\r\n        onChange={(e) => setNick(e.target.value)}\r\n        className='s_input'\r\n      />\r\n      <Input\r\n        label='Password'\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n        className='s_input'\r\n        type='password'\r\n      />\r\n      <Button\r\n        title='Confirm'\r\n        disabled={!nick || !password}\r\n        onClick={() => {\r\n          signIn({\r\n            nick,\r\n            password,\r\n          })\r\n        }}\r\n      />\r\n      <Link to='/signup'>\r\n        Registration\r\n      </Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(() => ({}), {\r\n  signIn,\r\n})(SignIn);\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from \"react-router-dom\";\r\nimport Input from '../reusable/input';\r\nimport Button from '../reusable/button';\r\nimport { signUp } from '../../common/actions/auth';\r\nimport './signup.css';\r\n\r\nconst SignUp = ({ signUp }) => {\r\n  const [nick, setNick] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [email, setEmail] = useState('');\r\n\r\n  const isAllFieldsFilled = !!nick && !!password && !!email\r\n  return(\r\n    <div className='signup__container'>\r\n      <Input\r\n        label='Nickname *'\r\n        value={nick}\r\n        onChange={(e) => setNick(e.target.value)}\r\n        className='s_input'\r\n      />\r\n      <Input\r\n        label='Password *'\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n        className='s_input'\r\n        type='password'\r\n      />\r\n      <Input\r\n        label='Email *'\r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n        className='s_input'\r\n      />\r\n      <Button\r\n        title='Register'\r\n        disabled={!nick || !password}\r\n        onClick={() => {\r\n          isAllFieldsFilled && signUp({\r\n            nick,\r\n            password,\r\n            email,\r\n          });\r\n        }}\r\n      />\r\n      <Link to='/signin'>\r\n        Back\r\n      </Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(() => ({}), {\r\n  signUp,\r\n})(SignUp);\r\n","import socketIOClient from \"socket.io-client\";\r\n\r\nconst socketApi = process.env.REACT_APP_API;\r\n\r\nconst socket = (token) => (\r\n  socketIOClient(socketApi, {\r\n    query: {\r\n      token: token,\r\n    },\r\n  })\r\n);\r\n\r\nexport default socket;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"../../reusable/button\";\r\nimport \"./index.css\";\r\nimport history from \"../../../services/history\";\r\n\r\nimport socketIO from \"../../../services/socket\";\r\n\r\nconst ChatList = ({ token, id }) => {\r\n  const [search, handleChangeSearch] = useState(\"\");\r\n  const [chats, handleSetChatsList] = useState([]);\r\n  const socket = socketIO(token);\r\n\r\n  useEffect(() => {\r\n    socket.emit(\"chats\", { search, userId: id });\r\n    socket.on(`chats/${id}`, handleSetChatsList);\r\n    return () => {\r\n      socket.off(`chats/${id}`);\r\n    };\r\n  }, [search]);\r\n\r\n  useEffect(() => {\r\n    chats.forEach((chat) => {\r\n      socket.on(`notifications/${chat.id}`, (data) => {\r\n        if (window.cordova) {\r\n          window.cordova.plugins.notification.local.schedule({\r\n            id: data.chat.id,\r\n            title: `You have new message in chat - ${data.chat.name}`,\r\n            text: data.message,\r\n            foreground: true,\r\n          });\r\n\r\n          window.cordova.plugins.notification.local.on(\"click\", function (\r\n            notification\r\n          ) {\r\n            if (notification.id == data.chat.id) {\r\n              history.push(`/chat/${data.chat.id}`);\r\n            }\r\n          });\r\n        }\r\n      });\r\n    });\r\n\r\n    return () => {\r\n      chats.forEach((chat) => {\r\n        socket.off(`notifications/${chat.id}`);\r\n      });\r\n    };\r\n  }, [chats]);\r\n\r\n  return (\r\n    <div className=\"chat__container\">\r\n      <div className=\"chat_plus\">\r\n        <Link to=\"/create\">\r\n          <Button title=\"+\" />\r\n        </Link>\r\n      </div>\r\n      <input\r\n        value={search}\r\n        placeholder=\"Search...\"\r\n        onChange={(e) => handleChangeSearch(e.target.value)}\r\n      />\r\n      <div className=\"chat_list\">\r\n        {chats.map((item, i) => {\r\n          return (\r\n            <Link key={i} to={`/chat/${item.id}`}>\r\n              {item.name}\r\n            </Link>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  (store) => ({\r\n    token: store.auth.token,\r\n    id: store.auth.user.id,\r\n  }),\r\n  {}\r\n)(ChatList);\r\n","import React from \"react\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport MaterialInput from \"@material-ui/core/Input\";\r\n\r\nconst MultiSelect = ({\r\n  values,\r\n  handleChange,\r\n  users,\r\n}) => {\r\n  return (\r\n    <FormControl>\r\n      <InputLabel id=\"demo-mutiple-checkbox-label\">Users</InputLabel>\r\n      <Select\r\n        labelId=\"demo-mutiple-checkbox-label\"\r\n        id=\"demo-mutiple-checkbox\"\r\n        multiple\r\n        value={values}\r\n        onChange={handleChange}\r\n        input={<MaterialInput />}\r\n        renderValue={(selected) => selected.map((i) => i.nick).join(\", \")}\r\n      >\r\n        {users.map((user) => (\r\n          <MenuItem key={user.nick} value={user}>\r\n            <Checkbox checked={values.find((a) => a.nick === user.nick)} />\r\n            <ListItemText primary={user.nick} />\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default MultiSelect;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Input from \"../../reusable/input\";\r\nimport Button from \"../../reusable/button\";\r\nimport MultiSelect from \"../../reusable/multi-select\";\r\nimport history from \"../../../services/history\";\r\nimport \"./index.css\";\r\nimport { loadUsers } from \"../../../common/actions/auth\";\r\n\r\nimport socketIO from \"../../../services/socket\";\r\n\r\nconst CreateChat = ({ id, token, loadUsers, users }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const socket = socketIO(token);\r\n\r\n  useEffect(() => {\r\n    loadUsers(id);\r\n  }, []);\r\n\r\n  const [usersName, handleSetUsersName] = useState([]);\r\n\r\n  const handleChange = (event) => {\r\n    handleSetUsersName(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"create-chat__container\">\r\n      <div className=\"chat_plus\">\r\n        <Link to=\"/\">\r\n          <Button title=\"Back\" />\r\n        </Link>\r\n      </div>\r\n      <div className=\"create-chat__data\">\r\n        <Input\r\n          label=\"Chat Name\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n          className=\"s_input\"\r\n        />\r\n        <MultiSelect\r\n          handleChange={handleChange}\r\n          values={usersName}\r\n          users={users}\r\n        />\r\n        <Button\r\n          title=\"Create\"\r\n          disabled={!name}\r\n          onClick={() => {\r\n            socket.emit(\"create_chat\",\r\n              {\r\n                name,\r\n                creator: id,\r\n                type: 'public',\r\n                users: [id, ...usersName.map(user => user.id)],\r\n              }\r\n            );\r\n            history.push(\"/\");\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  (store) => ({\r\n    id: store.auth.user.id,\r\n    token: store.auth.token,\r\n    users: store.auth.users,\r\n  }),\r\n  {\r\n    loadUsers,\r\n  }\r\n)(CreateChat);\r\n","import React from \"react\";\r\n\r\nexport const Member = ({\r\n  data,\r\n}) => {\r\n  return (\r\n    <span>\r\n      {data.user && data.user.nick}\r\n    </span>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\r\nimport Button from \"../../reusable/button\";\r\nimport MultiSelect from \"../../reusable/multi-select\";\r\nimport history from \"../../../services/history\";\r\nimport { Member } from \"./member\";\r\nimport { loadUsers } from \"../../../common/actions/auth\";\r\nimport socketIO from \"../../../services/socket\";\r\nimport isBase64 from \"is-base64\";\r\nimport \"./index.css\";\r\n\r\nconst getChatId = (location) => {\r\n  const path = location.split(\"/\");\r\n  const chatId = path[path.length - 1];\r\n  return chatId;\r\n};\r\n\r\nconst Chat = ({ userId, token, loadUsers, users }) => {\r\n  const [message, handleSetMessage] = useState(\"\");\r\n  const [members, handleMembersFromSocket] = useState([]);\r\n  const [messages, handleMessagesFromSocket] = useState([]);\r\n  const [isPopupOpen, handleTogglePopup] = useState(false);\r\n  const [usersName, handleSetUsersName] = useState([]);\r\n  const [filteredUsers, handleSetFilteredUsers] = useState([]);\r\n\r\n  const handleChange = (event) => {\r\n    handleSetUsersName(event.target.value);\r\n  };\r\n\r\n  const chatId = getChatId(history.location.pathname);\r\n  const socket = socketIO(token);\r\n\r\n  useEffect(() => {\r\n    const filteredUsers = [];\r\n    users.forEach((user) => {\r\n      const isMember = members.find((m) => m.user.id === user.id);\r\n      if (!isMember) {\r\n        filteredUsers.push(user);\r\n      }\r\n    });\r\n    handleSetFilteredUsers(filteredUsers);\r\n  }, [users, members]);\r\n\r\n  useEffect(() => {\r\n    socket.emit(\"entry_to_chat\", { userId, chatId });\r\n    socket.on(`chat_members/${chatId}`, handleMembersFromSocket);\r\n    socket.on(`messages/${chatId}`, handleMessagesFromSocket);\r\n\r\n    return () => {\r\n      socket.off(`chat_members/${chatId}`);\r\n      socket.off(`messages/${chatId}/${userId}`);\r\n    };\r\n  }, []);\r\n\r\n  const postMessage = () => {\r\n    socket.emit(\"send_message\", {\r\n      msgOptions: {\r\n        message,\r\n        chatId,\r\n        userId,\r\n      },\r\n      userOptions: { chatId, userId },\r\n    });\r\n    handleSetMessage(\"\");\r\n  };\r\n\r\n  const postPicture = () => {\r\n    if (!window.cordova) return;\r\n\r\n    navigator.camera.getPicture(\r\n      (image) => {\r\n        socket.emit(\"send_message\", {\r\n          msgOptions: {\r\n            message: \"data:image/png;base64,\" + image,\r\n            chatId,\r\n            userId,\r\n          },\r\n          userOptions: { chatId, userId },\r\n        });\r\n      },\r\n      (error) => console.log(error),\r\n      {\r\n        destinationType: navigator.camera.DestinationType.DATA_URL,\r\n      }\r\n    );\r\n  };\r\n\r\n  const renderMessage = (msg) => {\r\n    if (isBase64(msg, { mimeRequired: true })) {\r\n      return <img src={msg} />;\r\n    }\r\n    return msg;\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat_body\">\r\n      <div className=\"chat_body_leave\">\r\n        <Link to=\"/\">\r\n          <Button title=\"Back\" />\r\n        </Link>\r\n        <a>\r\n          <Button\r\n            title=\"Add users\"\r\n            onClick={() => {\r\n              handleTogglePopup(true);\r\n              loadUsers(userId);\r\n            }}\r\n          />\r\n        </a>\r\n        <Link to=\"/\">\r\n          <Button\r\n            title=\"Leave Chat\"\r\n            onClick={() => {\r\n              socket.emit(\"leave_chat\", { userId, chatId });\r\n            }}\r\n          />\r\n        </Link>\r\n      </div>\r\n      <div className=\"chat_body_wrap\">\r\n        {isPopupOpen && (\r\n          <div className=\"private\">\r\n            <div className=\"chat_body_leave\">\r\n              <Button\r\n                title=\"Close\"\r\n                onClick={() => {\r\n                  handleTogglePopup(false);\r\n                  handleSetUsersName([]);\r\n                }}\r\n              />\r\n            </div>\r\n            <MultiSelect\r\n              handleChange={handleChange}\r\n              values={usersName}\r\n              users={filteredUsers}\r\n            />\r\n            <Button\r\n              title=\"Add Users\"\r\n              onClick={() => {\r\n                socket.emit(\"add_new_members_to_chat\", {\r\n                  chatId,\r\n                  users: usersName.map((user) => user.id),\r\n                });\r\n                handleTogglePopup(false);\r\n                handleSetUsersName([]);\r\n              }}\r\n            />\r\n          </div>\r\n        )}\r\n        <div className=\"chat_body_members\">\r\n          {members.map((mem, i) => (\r\n            <Member key={i} data={mem} />\r\n          ))}\r\n        </div>\r\n        <div className=\"chat_body_messages\">\r\n          <div className=\"messages_list\">\r\n            {messages.map((msg) => (\r\n              <div key={msg.id}>\r\n                <span className=\"msg_name\">{msg.user && msg.user.nick}</span>\r\n                <span className=\"msg_msg\">{renderMessage(msg.message)}</span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div className=\"messages_inputs\">\r\n            <TextareaAutosize\r\n              aria-label=\"empty textarea\"\r\n              onChange={(e) => handleSetMessage(e.target.value)}\r\n              value={message}\r\n              className=\"message_input\"\r\n            />\r\n            <Button title=\"Send\" disabled={!message} onClick={postMessage} />\r\n            <Button title=\"Picture\" onClick={postPicture} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  (store) => ({\r\n    userId: store.auth.user.id,\r\n    token: store.auth.token,\r\n    users: store.auth.users,\r\n  }),\r\n  { loadUsers }\r\n)(Chat);\r\n","import React from \"react\";\r\nimport { Route, Redirect, Switch, Router } from \"react-router-dom\";\r\nimport history from \"../../services/history\";\r\n\r\nimport ChatList from \"./chat-list\";\r\nimport CreateChat from './chat-create';\r\nimport Chat from './chat';\r\n\r\nconst ChatContainer = () => {\r\n  return (\r\n    <Router history={history}>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={ChatList} />\r\n        <Route path=\"/create\" component={CreateChat} />\r\n        <Route path=\"/chat/:id\" component={Chat} />\r\n        <Redirect to=\"/\" />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default ChatContainer;\r\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route, Redirect, Switch, Router } from \"react-router-dom\";\nimport history from \"./services/history\";\nimport \"./index.css\";\n\nimport SignIn from \"./components/signin/signin\";\nimport SignUp from \"./components/signup/signup\";\nimport ChatApp from \"./components/chat\";\n\nconst App = ({ token }) => (\n  <Router history={history}>\n    <div className=\"app\">\n      {token ? (\n        <Switch>\n          <Route path=\"/\" component={ChatApp} />\n          <Redirect to=\"/\" />\n        </Switch>\n      ) : (\n        <Switch>\n          <Route exact path=\"/signin\" component={SignIn} />\n          <Route path=\"/signup\" component={SignUp} />\n          <Redirect to=\"/signin\" />\n        </Switch>\n      )}\n    </div>\n  </Router>\n);\n\nexport default connect(\n  (store) => ({\n    token: store.auth.token,\n  }),\n  {}\n)(App);\n","import { SET_AUTH_DATA, SET_USERS } from '../actions/auth';\r\n\r\nconst initialState = {\r\n  user: {},\r\n  token: null,\r\n  users: [],\r\n};\r\n\r\nexport default function auth(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_AUTH_DATA:\r\n      return {\r\n        ...state,\r\n        user: action.payload.user,\r\n        token: action.payload.token,\r\n      };\r\n    case SET_USERS:\r\n      return {\r\n        ...state,\r\n        users: action.payload,\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport auth from './auth';\r\n\r\nexport default combineReducers({\r\n  auth,\r\n});\r\n","import axios from 'axios';\r\nimport qs from 'qs';\r\n\r\nconst apiRoot = process.env.REACT_APP_API;\r\n\r\nexport default function http({\r\n  method, url, data, params,\r\n}) {\r\n  const token = localStorage.getItem('auth');\r\n  const config = {\r\n    method: method.toLowerCase(),\r\n    url: apiRoot + url,\r\n    params,\r\n    paramsSerializer: function (p) {\r\n      return qs.stringify(p, { arrayFormat: 'repeat' });\r\n    },\r\n  };\r\n  if (data) config['data'] = data;\r\n  config['headers'] = {\r\n    'Content-Type': 'application/json',\r\n    'Access-Control-Allow-Origin': '*',\r\n  };\r\n  if (token) {\r\n    config['headers'] = {\r\n      'Authorization': 'Bearer ' + token,\r\n    };\r\n  }\r\n  return axios(config);\r\n}\r\n","import http from '../../services/http';\r\nimport { put, takeEvery, call } from 'redux-saga/effects';\r\n\r\nimport {\r\n  setAuthData,\r\n  SIGN_IN,\r\n  SIGN_UP,\r\n  LOAD_USERS,\r\n  setUsers,\r\n} from '../actions/auth';\r\n\r\nfunction* signIn(action) {\r\n  try {\r\n    localStorage.removeItem('auth');\r\n    const user = yield call(http, {\r\n      url: '/signin',\r\n      method: 'POST',\r\n      data: action.payload,\r\n    });\r\n    localStorage.setItem('auth', user.data.token);\r\n    yield put(setAuthData({\r\n      token: user.data.token,\r\n      user: user.data.user,\r\n    }));\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nfunction* signUp(action) {\r\n  try {\r\n    const user = yield call(http, {\r\n      url: '/signup',\r\n      method: 'POST',\r\n      data: action.payload,\r\n    });\r\n    localStorage.setItem('auth', user.data.token);\r\n\r\n    yield put(setAuthData({\r\n      token: user.data.token,\r\n      user: user.data.user,\r\n    }));\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nfunction* loadUsers(action) {\r\n  try {\r\n    const users = yield call(http, {\r\n      url: `/users/${action.payload}`,\r\n      method: 'GET',\r\n    });\r\n\r\n    yield put(setUsers(users.data));\r\n\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport default function* authSaga() {\r\n  yield takeEvery(SIGN_IN, signIn);\r\n  yield takeEvery(SIGN_UP, signUp);\r\n  yield takeEvery(LOAD_USERS, loadUsers);\r\n};\r\n","import { all } from 'redux-saga/effects';\r\nimport authSaga from './auth';\r\n\r\nconst sagas = function* rootSaga() {\r\n  yield all([\r\n    authSaga(),\r\n  ]);\r\n};\r\n\r\nexport default sagas;\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { composeWithDevTools } from 'redux-devtools-extension/logOnlyInProduction';\r\n\r\nimport storage from 'redux-persist/lib/storage';\r\nimport reducers from './common/reducers';\r\nimport sagas from './common/sagas';\r\n\r\nconst composeEnhancers = composeWithDevTools({\r\n  maxAge: 25,\r\n  latency: 1500,\r\n});\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst persistConfig = {\r\n  key: 'Chat',\r\n  storage,\r\n  blacklist: [],\r\n};\r\nconst persistedReducer = persistReducer(persistConfig, reducers);\r\n\r\nexport default () => {\r\n  const store = createStore(\r\n    persistedReducer,\r\n    composeEnhancers(\r\n      applyMiddleware(sagaMiddleware),\r\n    ),\r\n  );\r\n  sagaMiddleware.run(sagas);\r\n  const persistor = persistStore(store);\r\n  return { persistor, store };\r\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/es/integration/react';\nimport Storage from './store';\nimport * as serviceWorker from './serviceWorker';\n\nconst { persistor, store } = Storage();\n\nconst renderReactDom = () => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <PersistGate\n        persistor={persistor}\n      >\n        <App />\n      </PersistGate>\n    </Provider>,\n    document.getElementById('root'),\n  );\n};\n\nif (window.cordova) {\n  document.addEventListener('deviceready', () => {\n    renderReactDom();\n  }, false);\n} else {\n  renderReactDom();\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}